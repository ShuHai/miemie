var miemie = (function () {
'use strict';

var Array$1 = function Array$1 () {};

Array$1.prototype.hello = function hello (message) {
  var a = message || 'hello world';
  console.log(a);
};

// 数组去重
Array$1.prototype.unique = function unique (arr) {
  var result = [];
  arr.map(function (item) {
    result.indexOf(item) === -1 ? result.push(item) : null;
  });
  return result
};

// 判断是否是数组
Array$1.prototype.isArray = function isArray (object) {
  return Object.prototype.toString.call(object) === '[object Array]'
};

// 数组求交集
Array$1.prototype.intersection = function intersection (arr1, arr2) {

};

// 数组求并集
Array$1.prototype.union = function union (arr1, arr2) {

};

// 数组求差集
Array$1.prototype.difference = function difference (arr1, arr2) {

};

var Number = function Number () {};

Number.prototype.isNumber = function isNumber (num) {
  return !isNaN(num)
};
// 求和
Number.prototype.sum = function sum () {
    var this$1 = this;

  var sum = 0;
  var args = Array.prototype.slice.call(arguments);
  args.map(function (item) {
    console.log(item);
    console.log(sum);
    sum += this$1.isNumber(item) ? item : 0;
  });
  return sum
};

var Mie = function Mie () {
  this.array = new Array$1();
  this.number = new Number();
};

var miemie = new Mie();

return miemie;

}());
